{"version":3,"file":"superagentHttpClient.js","sourceRoot":"","sources":["superagentHttpClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * @license\n * Copyright Â© 2005-2023 Hyland Software, Inc. and its affiliates. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ee, { Emitter } from 'event-emitter';\nimport superagent, { Response } from 'superagent';\nimport { Authentication } from './authentication/authentication';\nimport { RequestOptions, HttpClient, SecurityOptions, Emitters } from './api-clients/http-client.interface';\nimport { Oauth2 } from './authentication/oauth2';\nimport { BasicAuth } from './authentication/basicAuth';\nimport { isBrowser, paramToString } from './utils';\n\ndeclare const Blob: any;\ndeclare const Buffer: any;\n\nconst isProgressEvent = (event: ProgressEvent | unknown): event is ProgressEvent => (event as ProgressEvent)?.lengthComputable;\n\nexport class SuperagentHttpClient implements HttpClient {\n    /**\n     * The default HTTP timeout for all API calls.\n     */\n    timeout: number | { deadline?: number; response?: number } = undefined;\n\n    post<T = any>(url: string, options: RequestOptions, securityOptions: SecurityOptions, emitters: Emitters): Promise<T> {\n        return this.request<T>(url, { ...options, httpMethod: 'POST' }, securityOptions, emitters);\n    }\n\n    put<T = any>(url: string, options: RequestOptions, securityOptions: SecurityOptions, emitters: Emitters): Promise<T> {\n        return this.request<T>(url, { ...options, httpMethod: 'PUT' }, securityOptions, emitters);\n    }\n\n    get<T = any>(url: string, options: RequestOptions, securityOptions: SecurityOptions, emitters: Emitters): Promise<T> {\n        return this.request<T>(url, { ...options, httpMethod: 'GET' }, securityOptions, emitters);\n    }\n\n    delete<T = void>(url: string, options: RequestOptions, securityOptions: SecurityOptions, emitters: Emitters): Promise<T> {\n        return this.request<T>(url, { ...options, httpMethod: 'DELETE' }, securityOptions, emitters);\n    }\n\n    request<T = any>(url: string, options: RequestOptions, securityOptions: SecurityOptions, emitters: Emitters): Promise<T> {\n        const { httpMethod, queryParams, headerParams, formParams, bodyParam, contentType, accept, responseType, returnType } = options;\n        const { eventEmitter, apiClientEmitter } = emitters;\n\n        let request = this.buildRequest(\n            httpMethod,\n            url,\n            queryParams,\n            headerParams,\n            formParams,\n            bodyParam,\n            contentType,\n            accept,\n            responseType,\n            eventEmitter,\n            returnType,\n            securityOptions\n        );\n\n        if (returnType === 'Binary') {\n            request = request.buffer(true).parse(superagent.parse['application/octet-stream']);\n        }\n\n        const promise: any = new Promise((resolve, reject) => {\n            request.on('abort', () => {\n                eventEmitter.emit('abort');\n            });\n            request.end((error: any, response: Response) => {\n                if (error) {\n                    apiClientEmitter.emit('error', error);\n                    eventEmitter.emit('error', error);\n\n                    if (error.status === 401) {\n                        apiClientEmitter.emit('unauthorized');\n                        eventEmitter.emit('unauthorized');\n                    }\n\n                    if (response && response.text) {\n                        error = error || {};\n                        reject(Object.assign(error, { message: response.text }));\n                    } else {\n                        reject({ error: error });\n                    }\n                } else {\n                    if (securityOptions.isBpmRequest) {\n                        if (response.header && response.header.hasOwnProperty('set-cookie')) {\n                            // mutate the passed value from AlfrescoApiClient class for backward compatibility\n                            securityOptions.authentications.cookie = response.header['set-cookie'][0];\n                        }\n                    }\n                    let data = {};\n                    if (response.type === 'text/html') {\n                        data = SuperagentHttpClient.deserialize(response);\n                    } else {\n                        data = SuperagentHttpClient.deserialize(response, returnType);\n                    }\n\n                    eventEmitter.emit('success', data);\n                    resolve(data);\n                }\n            });\n        });\n\n        promise.abort = function () {\n            request.abort();\n            return this;\n        };\n\n        return promise;\n    }\n\n    private buildRequest(\n        httpMethod: string,\n        url: string,\n        queryParams: { [key: string]: any },\n        headerParams: { [key: string]: any },\n        formParams: { [key: string]: any },\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        bodyParam: string | Object,\n        contentType: string,\n        accept: string,\n        responseType: string,\n        eventEmitter: ee.Emitter,\n        returnType: string,\n        securityOptions: SecurityOptions\n    ) {\n        const request = superagent(httpMethod, url);\n\n        const { isBpmRequest, authentications, defaultHeaders = {}, enableCsrf, withCredentials = false } = securityOptions;\n\n        // apply authentications\n        this.applyAuthToRequest(request, authentications);\n\n        // set query parameters\n        request.query(SuperagentHttpClient.normalizeParams(queryParams));\n\n        // set header parameters\n        request.set(defaultHeaders).set(SuperagentHttpClient.normalizeParams(headerParams));\n\n        if (isBpmRequest && enableCsrf) {\n            this.setCsrfToken(request);\n        }\n\n        if (withCredentials) {\n            request.withCredentials();\n        }\n\n        // add cookie for activiti\n        if (isBpmRequest) {\n            request.withCredentials();\n            if (securityOptions.authentications.cookie) {\n                if (!isBrowser()) {\n                    request.set('Cookie', securityOptions.authentications.cookie);\n                }\n            }\n        }\n\n        // set request timeout\n        request.timeout(this.timeout);\n\n        if (contentType && contentType !== 'multipart/form-data') {\n            request.type(contentType);\n        } else if (!(request as any).header['Content-Type'] && contentType !== 'multipart/form-data') {\n            request.type('application/json');\n        }\n\n        if (contentType === 'application/x-www-form-urlencoded') {\n            request.send(SuperagentHttpClient.normalizeParams(formParams)).on('progress', (event: any) => {\n                this.progress(event, eventEmitter);\n            });\n        } else if (contentType === 'multipart/form-data') {\n            const _formParams = SuperagentHttpClient.normalizeParams(formParams);\n            for (const key in _formParams) {\n                if (_formParams.hasOwnProperty(key)) {\n                    if (SuperagentHttpClient.isFileParam(_formParams[key])) {\n                        // file field\n                        request.attach(key, _formParams[key]).on('progress', (event: ProgressEvent) => {\n                            // jshint ignore:line\n                            this.progress(event, eventEmitter);\n                        });\n                    } else {\n                        request.field(key, _formParams[key]).on('progress', (event: ProgressEvent) => {\n                            // jshint ignore:line\n                            this.progress(event, eventEmitter);\n                        });\n                    }\n                }\n            }\n        } else if (bodyParam) {\n            request.send(bodyParam).on('progress', (event: any) => {\n                this.progress(event, eventEmitter);\n            });\n        }\n\n        if (accept) {\n            request.accept(accept);\n        }\n\n        if (returnType === 'blob' || returnType === 'Blob' || responseType === 'blob' || responseType === 'Blob') {\n            request.responseType('blob');\n        } else if (returnType === 'String') {\n            request.responseType('string');\n        }\n\n        return request;\n    }\n\n    setCsrfToken(request: any): void {\n        const token = SuperagentHttpClient.createCSRFToken();\n        request.set('X-CSRF-TOKEN', token);\n\n        if (!isBrowser()) {\n            request.set('Cookie', 'CSRF-TOKEN=' + token + ';path=/');\n        }\n\n        try {\n            document.cookie = 'CSRF-TOKEN=' + token + ';path=/';\n        } catch (err) {\n            /* continue regardless of error */\n        }\n    }\n\n    /**\n     * Applies authentication headers to the request.\n     * @param {Object} request The request object created by a <code>superagent()</code> call.\n     */\n    private applyAuthToRequest(request: any, authentications: Authentication) {\n        if (authentications) {\n            switch (authentications.type) {\n                case 'basic': {\n                    const basicAuth: BasicAuth = authentications.basicAuth;\n                    if (basicAuth.username || basicAuth.password) {\n                        request.auth(basicAuth.username ? encodeURI(basicAuth.username) : '', basicAuth.password ? encodeURI(basicAuth.password) : '');\n                    }\n                    break;\n                }\n                case 'activiti': {\n                    if (authentications.basicAuth.ticket) {\n                        request.set({ Authorization: authentications.basicAuth.ticket });\n                    }\n                    break;\n                }\n                case 'oauth2': {\n                    const oauth2: Oauth2 = authentications.oauth2;\n                    if (oauth2.accessToken) {\n                        request.set({ Authorization: 'Bearer ' + oauth2.accessToken });\n                    }\n                    break;\n                }\n                default:\n                    throw new Error('Unknown authentication type: ' + authentications.type);\n            }\n        }\n    }\n\n    private progress(event: ProgressEvent | unknown, eventEmitter: Emitter): void {\n        if (isProgressEvent(event)) {\n            const percent = Math.round((event.loaded / event.total) * 100);\n\n            const progress = {\n                total: event.total,\n                loaded: event.loaded,\n                percent,\n            };\n\n            eventEmitter.emit('progress', progress);\n        }\n    }\n\n    private static createCSRFToken(a?: any): string {\n        return a ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16) : ([1e16] + (1e16).toString()).replace(/[01]/g, SuperagentHttpClient.createCSRFToken);\n    }\n\n    /**\n     * Deserializes an HTTP response body into a value of the specified type.\n     * @param {Object} response A SuperAgent response object.\n     * @param {(String|string[]|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n     * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n     * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n     * all properties on <code>data<code> will be converted to this type.\n     * @returns A value of the specified type.\n     */\n    private static deserialize(response: any, returnType?: any): any {\n        if (response === null) {\n            return null;\n        }\n\n        let data = response.body;\n\n        if (data === null) {\n            data = response.text;\n        }\n\n        if (returnType) {\n            if (returnType === 'blob' && isBrowser()) {\n                data = new Blob([data], { type: response.header['content-type'] });\n            } else if (returnType === 'blob' && !isBrowser()) {\n                data = new Buffer.from(data, 'binary');\n            } else if (Array.isArray(data)) {\n                data = data.map((element) => {\n                    return new returnType(element);\n                });\n            } else {\n                data = new returnType(data);\n            }\n        }\n\n        return data;\n    }\n\n    /**\n     * Normalizes parameter values:\n     * <ul>\n     * <li>remove nils</li>\n     * <li>keep files and arrays</li>\n     * <li>format to string with `paramToString` for other cases</li>\n     * </ul>\n     * @param {Object.<String, Object>} params The parameters as object properties.\n     * @returns {Object.<String, Object>} normalized parameters.\n     */\n    private static normalizeParams(params: { [key: string]: any }): { [key: string]: any } {\n        const newParams: { [key: string]: any } = {};\n\n        for (const key in params) {\n            if (params.hasOwnProperty(key) && params[key] !== undefined && params[key] !== null) {\n                const value = params[key];\n                if (SuperagentHttpClient.isFileParam(value) || Array.isArray(value)) {\n                    newParams[key] = value;\n                } else {\n                    newParams[key] = paramToString(value);\n                }\n            }\n        }\n        return newParams;\n    }\n\n    /**\n     * Checks whether the given parameter value represents file-like content.\n     * @param param The parameter to check.\n     * @returns <code>true</code> if <code>param</code> represents a file.\n     */\n    private static isFileParam(param: any): boolean {\n        // Buffer in Node.js\n        if (typeof Buffer === 'function' && (param instanceof Buffer || param.path)) {\n            return true;\n        }\n        // Blob in browser\n        if (typeof Blob === 'function' && param instanceof Blob) {\n            return true;\n        }\n        // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n        if (typeof File === 'function' && param instanceof File) {\n            return true;\n        }\n        // Safari fix\n        if (typeof File === 'object' && param instanceof File) {\n            return true;\n        }\n\n        return false;\n    }\n}\n"]}