{"version":3,"file":"base.api.js","sourceRoot":"","sources":["base.api.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;AAEH,gEAA4D;AAI5D,MAAsB,OAAQ,SAAQ,sBAAS;IAM3C,YAAY,UAAmE;QAC3E,KAAK,CAAC,UAA6B,CAAC,CAAC;IACzC,CAAC;IAGD,IAAI,gBAAgB;;QAChB,OAAO,MAAA,IAAI,CAAC,UAAU,mCAAI,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC;IACpE,CAAC;IAED,IAAa,SAAS;;QAClB,OAAO,MAAA,IAAI,CAAC,UAAU,mCAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IAC7D,CAAC;IAEQ,IAAI,CAAU,OAAuB;QAC1C,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAI,OAAO,CAAC,CAAC;IAClD,CAAC;IAEQ,GAAG,CAAU,OAAuB;QACzC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAI,OAAO,CAAC,CAAC;IACjD,CAAC;IAEQ,GAAG,CAAU,OAAuB;QACzC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAI,OAAO,CAAC,CAAC;IACjD,CAAC;IAEQ,MAAM,CAAW,OAAuB;QAC7C,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACjD,CAAC;CACJ;AAlCD,0BAkCC","sourcesContent":["/*!\n * @license\n * Copyright Â© 2005-2023 Hyland Software, Inc. and its affiliates. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiClient } from '../../../api-clients/api-client';\nimport { LegacyHttpClient, RequestOptions } from '../../../api-clients/http-client.interface';\nimport { AlfrescoApiType, LegacyTicketApi } from '../../../to-deprecate/alfresco-api-type';\n\nexport abstract class BaseApi extends ApiClient {\n    protected declare httpClient: LegacyHttpClient & LegacyTicketApi;\n\n    /** @deprecated */\n    constructor(legacyApi?: AlfrescoApiType);\n    constructor(httpClient: LegacyHttpClient & LegacyTicketApi);\n    constructor(httpClient?: AlfrescoApiType | (LegacyHttpClient & LegacyTicketApi)) {\n        super(httpClient as AlfrescoApiType);\n    }\n\n    // TODO: Find a way to remove this hack from the legacy version :/\n    get apiClientPrivate(): LegacyHttpClient & LegacyTicketApi {\n        return this.httpClient ?? this.alfrescoApi.contentPrivateClient;\n    }\n\n    override get apiClient(): LegacyHttpClient & LegacyTicketApi {\n        return this.httpClient ?? this.alfrescoApi.contentClient;\n    }\n\n    override post<T = any>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.post<T>(options);\n    }\n\n    override put<T = any>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.put<T>(options);\n    }\n\n    override get<T = any>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.get<T>(options);\n    }\n\n    override delete<T = void>(options: RequestOptions): Promise<T> {\n        return this.apiClientPrivate.delete(options);\n    }\n}\n"]}