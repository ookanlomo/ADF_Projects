"use strict";
/*!
 * @license
 * Copyright Â© 2005-2023 Hyland Software, Inc. and its affiliates. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthorityClearanceApi = void 0;
const base_api_1 = require("./base.api");
const model_1 = require("../model");
class AuthorityClearanceApi extends base_api_1.BaseApi {
    getAuthorityClearanceForAuthority(authorityId, opts) {
        let body = null;
        let pathParams = {
            'authorityId': authorityId
        };
        let queryParams = {
            'skipCount': opts['skipCount'],
            'maxItems': opts['maxItems']
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/cleared-authorities/{authorityId}/clearing-marks', 'GET', pathParams, queryParams, headerParams, formParams, body, contentTypes, accepts, model_1.AuthorityClearanceGroupPaging);
    }
    updateAuthorityClearance(authorityId, authorityClearance) {
        let postBody = authorityClearance;
        let pathParams = {
            authorityId: authorityId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/cleared-authorities/{authorityId}/clearing-marks', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, authorityClearance.length === 1 ? model_1.SecurityMarkEntry : model_1.SecurityMarkPaging);
    }
}
exports.AuthorityClearanceApi = AuthorityClearanceApi;
//# sourceMappingURL=../../../../../src/api/gs-classification-rest-api/api/authorityClearance.api.js.map