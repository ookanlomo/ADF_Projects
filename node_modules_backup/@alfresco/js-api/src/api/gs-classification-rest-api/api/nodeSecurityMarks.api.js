"use strict";
/*!
 * @license
 * Copyright Â© 2005-2023 Hyland Software, Inc. and its affiliates. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodeSecurityMarksApi = void 0;
const base_api_1 = require("./base.api");
const assert_1 = require("../../../assert");
const securityMarkPaging_1 = require("../model/securityMarkPaging");
class NodeSecurityMarksApi extends base_api_1.BaseApi {
    manageSecurityMarksOnNode(nodeId, dataBody) {
        (0, assert_1.throwIfNotDefined)(nodeId, 'nodeId');
        (0, assert_1.throwIfNotDefined)(dataBody, 'dataBody');
        let postBody = dataBody;
        let pathParams = {
            nodeId: nodeId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/secured-nodes/{nodeId}/securing-marks', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, securityMarkPaging_1.SecurityMarkPaging);
    }
    getSecurityMarksOnNode(nodeId, opts) {
        (0, assert_1.throwIfNotDefined)(nodeId, 'nodeId');
        let postBody = null;
        let pathParams = {
            nodeId: nodeId
        };
        let queryParams = {
            inUse: opts['inUse'],
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/secured-nodes/{nodeId}/securing-marks', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, securityMarkPaging_1.SecurityMarkPaging);
    }
}
exports.NodeSecurityMarksApi = NodeSecurityMarksApi;
//# sourceMappingURL=../../../../../src/api/gs-classification-rest-api/api/nodeSecurityMarks.api.js.map