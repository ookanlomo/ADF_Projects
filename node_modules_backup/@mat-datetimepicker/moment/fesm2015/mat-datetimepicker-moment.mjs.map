{"version":3,"file":"mat-datetimepicker-moment.mjs","sources":["../../../projects/moment/src/adapter/moment-datetime-adapter.ts","../../../projects/moment/src/adapter/moment-datetime-formats.ts","../../../projects/moment/src/adapter/index.ts","../../../projects/moment/src/mat-datetimepicker-moment.ts"],"sourcesContent":["import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport {\r\n  MAT_MOMENT_DATE_ADAPTER_OPTIONS,\r\n  MatMomentDateAdapterOptions,\r\n} from '@angular/material-moment-adapter';\r\nimport { DatetimeAdapter } from '@mat-datetimepicker/core';\r\n\r\nimport * as moment_ from 'moment';\r\nimport { Moment } from 'moment';\r\n\r\nconst moment = 'default' in moment_ ? moment_['default'] : moment_;\r\n\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class MomentDatetimeAdapter extends DatetimeAdapter<Moment> {\r\n  private _localeData: {\r\n    firstDayOfWeek: number;\r\n    longMonths: string[];\r\n    shortMonths: string[];\r\n    dates: string[];\r\n    hours: string[];\r\n    minutes: string[];\r\n    longDaysOfWeek: string[];\r\n    shortDaysOfWeek: string[];\r\n    narrowDaysOfWeek: string[];\r\n  };\r\n\r\n  private _useUtc = false;\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string,\r\n    @Optional()\r\n    @Inject(MAT_MOMENT_DATE_ADAPTER_OPTIONS)\r\n    matMomentAdapterOptions: MatMomentDateAdapterOptions,\r\n    _delegate: DateAdapter<Moment>\r\n  ) {\r\n    super(_delegate);\r\n    this.setLocale(matDateLocale || moment.locale());\r\n    this._useUtc = matMomentAdapterOptions.useUtc;\r\n  }\r\n\r\n  setLocale(locale: string) {\r\n    super.setLocale(locale);\r\n\r\n    const momentLocaleData = moment.localeData(locale);\r\n    this._localeData = {\r\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\r\n      longMonths: momentLocaleData.months(),\r\n      shortMonths: momentLocaleData.monthsShort(),\r\n      dates: range(31, (i) => super.createDate(2017, 0, i + 1).format('D')),\r\n      hours: range(24, (i) =>\r\n        this.createDatetime(2017, 0, 1, i, 0).format('H')\r\n      ),\r\n      minutes: range(60, (i) =>\r\n        this.createDatetime(2017, 0, 1, 1, i).format('m')\r\n      ),\r\n      longDaysOfWeek: momentLocaleData.weekdays(),\r\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\r\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\r\n    };\r\n  }\r\n\r\n  getHour(date: Moment): number {\r\n    return super.clone(date).hour();\r\n  }\r\n\r\n  getMinute(date: Moment): number {\r\n    return super.clone(date).minute();\r\n  }\r\n\r\n  isInNextMonth(startDate: Moment, endDate: Moment): boolean {\r\n    const nextMonth = this.getDateInNextMonth(startDate);\r\n    return super.sameMonthAndYear(nextMonth, endDate);\r\n  }\r\n\r\n  createDatetime(\r\n    year: number,\r\n    month: number,\r\n    date: number,\r\n    hour: number,\r\n    minute: number\r\n  ): Moment {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(\r\n        `Invalid month index \"${month}\". Month index has to be between 0 and 11.`\r\n      );\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    if (hour < 0 || hour > 23) {\r\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\r\n    }\r\n\r\n    if (minute < 0 || minute > 59) {\r\n      throw Error(\r\n        `Invalid minute \"${minute}\". Minute has to be between 0 and 59.`\r\n      );\r\n    }\r\n\r\n    // const result = moment({year, month, date, hour, minute}).locale(this.locale);\r\n    let result = moment({ year, month, date, hour, minute });\r\n    if (this._useUtc) {\r\n      result = result.utc();\r\n    }\r\n\r\n    // If the result isn't valid, the date must have been out of bounds for this month.\r\n    if (!result.isValid()) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  getFirstDateOfMonth(date: Moment): Moment {\r\n    return super.clone(date).startOf('month');\r\n  }\r\n\r\n  getHourNames(): string[] {\r\n    return this._localeData.hours;\r\n  }\r\n\r\n  getMinuteNames(): string[] {\r\n    return this._localeData.minutes;\r\n  }\r\n\r\n  addCalendarHours(date: Moment, hours: number): Moment {\r\n    return super.clone(date).add({ hours });\r\n  }\r\n\r\n  addCalendarMinutes(date: Moment, minutes: number): Moment {\r\n    return super.clone(date).add({ minutes });\r\n  }\r\n\r\n  deserialize(value: any): Moment | null {\r\n    return this._delegate.deserialize(value);\r\n  }\r\n\r\n  private getDateInNextMonth(date: Moment) {\r\n    return super.clone(date).date(1).add({ month: 1 });\r\n  }\r\n}\r\n","import { MatDatetimeFormats } from '@mat-datetimepicker/core';\r\n\r\nexport const MAT_MOMENT_DATETIME_FORMATS: MatDatetimeFormats = {\r\n  parse: {\r\n    dateInput: 'L',\r\n    monthInput: 'MMMM',\r\n    timeInput: 'LT',\r\n    datetimeInput: 'L LT',\r\n  },\r\n  display: {\r\n    dateInput: 'L',\r\n    monthInput: 'MMMM',\r\n    datetimeInput: 'L LT',\r\n    timeInput: 'LT',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n    popupHeaderDateLabel: 'ddd, DD MMM',\r\n  },\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  MatMomentDateModule,\r\n  MomentDateModule,\r\n} from '@angular/material-moment-adapter';\r\nimport {\r\n  DatetimeAdapter,\r\n  MAT_DATETIME_FORMATS,\r\n} from '@mat-datetimepicker/core';\r\nimport { MomentDatetimeAdapter } from './moment-datetime-adapter';\r\nimport { MAT_MOMENT_DATETIME_FORMATS } from './moment-datetime-formats';\r\n\r\nexport * from './moment-datetime-adapter';\r\nexport * from './moment-datetime-formats';\r\n\r\n@NgModule({\r\n  imports: [MomentDateModule],\r\n  providers: [\r\n    {\r\n      provide: DatetimeAdapter,\r\n      useClass: MomentDatetimeAdapter,\r\n    },\r\n  ],\r\n})\r\nexport class MomentDatetimeModule {}\r\n\r\n@NgModule({\r\n  imports: [MomentDatetimeModule, MatMomentDateModule],\r\n  providers: [\r\n    { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS },\r\n  ],\r\n})\r\nexport class MatMomentDatetimeModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;AAWA,MAAM,MAAM,GAAG,SAAS,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;AAEnE,SAAS,KAAK,CAAI,MAAc,EAAE,aAAmC,EAAA;AACnE,IAAA,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,WAAW,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AACnC,KAAA;AACD,IAAA,OAAO,WAAW,CAAC;AACrB,CAAC;AAGK,MAAO,qBAAsB,SAAQ,eAAuB,CAAA;AAehE,IAAA,WAAA,CACuC,aAAqB,EAG1D,uBAAoD,EACpD,SAA8B,EAAA;QAE9B,KAAK,CAAC,SAAS,CAAC,CAAC;AATX,QAAA,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;QAUtB,IAAI,CAAC,SAAS,CAAC,aAAa,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;AACjD,QAAA,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,MAAM,CAAC;KAC/C;AAED,IAAA,SAAS,CAAC,MAAc,EAAA;AACtB,QAAA,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAExB,MAAM,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG;AACjB,YAAA,cAAc,EAAE,gBAAgB,CAAC,cAAc,EAAE;AACjD,YAAA,UAAU,EAAE,gBAAgB,CAAC,MAAM,EAAE;AACrC,YAAA,WAAW,EAAE,gBAAgB,CAAC,WAAW,EAAE;YAC3C,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACrE,YAAA,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,KACjB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAClD;AACD,YAAA,OAAO,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,KACnB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAClD;AACD,YAAA,cAAc,EAAE,gBAAgB,CAAC,QAAQ,EAAE;AAC3C,YAAA,eAAe,EAAE,gBAAgB,CAAC,aAAa,EAAE;AACjD,YAAA,gBAAgB,EAAE,gBAAgB,CAAC,WAAW,EAAE;SACjD,CAAC;KACH;AAED,IAAA,OAAO,CAAC,IAAY,EAAA;QAClB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC;KACjC;AAED,IAAA,SAAS,CAAC,IAAY,EAAA;QACpB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC;KACnC;IAED,aAAa,CAAC,SAAiB,EAAE,OAAe,EAAA;QAC9C,MAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;QACrD,OAAO,KAAK,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KACnD;IAED,cAAc,CACZ,IAAY,EACZ,KAAa,EACb,IAAY,EACZ,IAAY,EACZ,MAAc,EAAA;;;AAId,QAAA,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE;AAC3B,YAAA,MAAM,KAAK,CACT,CAAA,qBAAA,EAAwB,KAAK,CAAA,0CAAA,CAA4C,CAC1E,CAAC;AACH,SAAA;QAED,IAAI,IAAI,GAAG,CAAC,EAAE;AACZ,YAAA,MAAM,KAAK,CAAC,CAAA,cAAA,EAAiB,IAAI,CAAA,iCAAA,CAAmC,CAAC,CAAC;AACvE,SAAA;AAED,QAAA,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE;AACzB,YAAA,MAAM,KAAK,CAAC,CAAA,cAAA,EAAiB,IAAI,CAAA,mCAAA,CAAqC,CAAC,CAAC;AACzE,SAAA;AAED,QAAA,IAAI,MAAM,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,EAAE;AAC7B,YAAA,MAAM,KAAK,CACT,CAAA,gBAAA,EAAmB,MAAM,CAAA,qCAAA,CAAuC,CACjE,CAAC;AACH,SAAA;;AAGD,QAAA,IAAI,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QACzD,IAAI,IAAI,CAAC,OAAO,EAAE;AAChB,YAAA,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;AACvB,SAAA;;AAGD,QAAA,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACrB,MAAM,KAAK,CAAC,CAAiB,cAAA,EAAA,IAAI,2BAA2B,KAAK,CAAA,EAAA,CAAI,CAAC,CAAC;AACxE,SAAA;AAED,QAAA,OAAO,MAAM,CAAC;KACf;AAED,IAAA,mBAAmB,CAAC,IAAY,EAAA;QAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KAC3C;IAED,YAAY,GAAA;AACV,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;KAC/B;IAED,cAAc,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;KACjC;IAED,gBAAgB,CAAC,IAAY,EAAE,KAAa,EAAA;AAC1C,QAAA,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;KACzC;IAED,kBAAkB,CAAC,IAAY,EAAE,OAAe,EAAA;AAC9C,QAAA,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;KAC3C;AAED,IAAA,WAAW,CAAC,KAAU,EAAA;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAC1C;AAEO,IAAA,kBAAkB,CAAC,IAAY,EAAA;QACrC,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;KACpD;;qIAlIU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAgBV,eAAe,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAE3B,+BAA+B,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;yIAlB9B,qBAAqB,EAAA,CAAA,CAAA;2FAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBADjC,UAAU;;;8BAiBN,QAAQ;;8BAAI,MAAM;+BAAC,eAAe,CAAA;;8BAClC,QAAQ;;8BACR,MAAM;+BAAC,+BAA+B,CAAA;;;;ACtC9B,MAAA,2BAA2B,GAAuB;AAC7D,IAAA,KAAK,EAAE;AACL,QAAA,SAAS,EAAE,GAAG;AACd,QAAA,UAAU,EAAE,MAAM;AAClB,QAAA,SAAS,EAAE,IAAI;AACf,QAAA,aAAa,EAAE,MAAM;AACtB,KAAA;AACD,IAAA,OAAO,EAAE;AACP,QAAA,SAAS,EAAE,GAAG;AACd,QAAA,UAAU,EAAE,MAAM;AAClB,QAAA,aAAa,EAAE,MAAM;AACrB,QAAA,SAAS,EAAE,IAAI;AACf,QAAA,cAAc,EAAE,UAAU;AAC1B,QAAA,aAAa,EAAE,IAAI;AACnB,QAAA,kBAAkB,EAAE,WAAW;AAC/B,QAAA,oBAAoB,EAAE,aAAa;AACpC,KAAA;;;MCMU,oBAAoB,CAAA;;oIAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,mBAAA,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,YARrB,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAQf,mBAAA,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAPpB,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,eAAe;AACxB,YAAA,QAAQ,EAAE,qBAAqB;AAChC,SAAA;AACF,KAAA,EAAA,OAAA,EAAA,CANS,gBAAgB,CAAA,EAAA,CAAA,CAAA;2FAQf,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAThC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,gBAAgB,CAAC;AAC3B,oBAAA,SAAS,EAAE;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,eAAe;AACxB,4BAAA,QAAQ,EAAE,qBAAqB;AAChC,yBAAA;AACF,qBAAA;iBACF,CAAA;;MASY,uBAAuB,CAAA;;uIAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wIAAvB,uBAAuB,EAAA,OAAA,EAAA,CARvB,oBAAoB,EAGC,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAKxC,mBAAA,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAJvB,SAAA,EAAA;AACT,QAAA,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,2BAA2B,EAAE;KACzE,EAHS,OAAA,EAAA,CAAA,oBAAoB,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAKxC,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,oBAAoB,EAAE,mBAAmB,CAAC;AACpD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAE,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,2BAA2B,EAAE;AACzE,qBAAA;iBACF,CAAA;;;AC/BD;;AAEG;;;;"}